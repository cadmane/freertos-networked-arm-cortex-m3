<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\boot_eth.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\boot_eth.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Sun Jul 11 17:18:28 2010
<BR><P>
<H3>Maximum Stack Usage =        132 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Reset_Handler_In_SRAM &rArr; UpdateBOOTP &rArr; uip_process &rArr; BOOTPThread &rArr; ParseTFTPData &rArr; uip_send &rArr; my_memcpy
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[17f74ac]">ProcessorInit</a>
 <LI><a href="#[17f7470]">Reset_Handler</a>
 <LI><a href="#[17f7524]">StartApplication</a>
 <LI><a href="#[17f9234]">Delay</a>
 <LI><a href="#[17f76c8]">Reset_Handler_In_SRAM</a>
 <LI><a href="#[17f768c]">UpdateHandler_In_SRAM</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f7614]">NmiSR</a>
 <LI><a href="#[17f75d8]">FaultISR</a>
 <LI><a href="#[17f759c]">UpdateHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[17f9234]">Delay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17f9234]">Delay</a><BR>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17f7650]">IntDefaultHandler</a><BR>
 <LI><a href="#[17f7614]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17f7614]">NmiSR</a><BR>
 <LI><a href="#[17f75d8]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17f75d8]">FaultISR</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17f7470]">Reset_Handler</a>
 <LI><a href="#[17f7614]">NmiSR</a>
 <LI><a href="#[17f75d8]">FaultISR</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f759c]">UpdateHandler</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f95f4]">SysTickIntHandler</a>
 <LI><a href="#[17f7650]">IntDefaultHandler</a>
 <LI><a href="#[17f76c8]">Reset_Handler_In_SRAM</a>
 <LI><a href="#[17f768c]">UpdateHandler_In_SRAM</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[17f74ac]"></a>ProcessorInit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[17f7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
<LI><a href="#[17f759c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHandler
</UL>

<P><STRONG><a name="[17f7470]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[17f74ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessorInit
</UL>

<P><STRONG><a name="[17f7524]"></a>StartApplication</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f76c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler_In_SRAM
</UL>

<P><STRONG><a name="[17f9234]"></a>Delay</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17f9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[17f9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[17f9630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureEnet
</UL>

<P><STRONG><a name="[17f966c]"></a>BOOTPThread</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, bl_enet.o(i.BOOTPThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BOOTPThread &rArr; ParseTFTPData &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17fa710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTFTPGet
<LI><a href="#[17fa74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBOOTPRequest
<LI><a href="#[17fa788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseTFTPData
<LI><a href="#[17fa7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseBOOTPReply
</UL>
<BR>[Called By]<UL><LI><a href="#[17f9324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
</UL>

<P><STRONG><a name="[17fd410]"></a>CheckForceUpdate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bl_check.o(i.CheckForceUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[17f76c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler_In_SRAM
</UL>

<P><STRONG><a name="[17f9630]"></a>ConfigureEnet</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, bl_enet.o(i.ConfigureEnet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = ConfigureEnet
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[17f76c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler_In_SRAM
</UL>

<P><STRONG><a name="[17f95f4]"></a>SysTickIntHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bl_enet.o(i.SysTickIntHandler))
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17f95b8]"></a>UpdateBOOTP</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, bl_enet.o(i.UpdateBOOTP))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = UpdateBOOTP &rArr; uip_process &rArr; BOOTPThread &rArr; ParseTFTPData &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_udp_new
<LI><a href="#[17f9324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
<LI><a href="#[17f939c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_init
<LI><a href="#[17f9414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_timer
<LI><a href="#[17f9450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_out
<LI><a href="#[17f948c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_init
<LI><a href="#[17f94c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_arpin
<LI><a href="#[17fa800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnetWritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[17f768c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateHandler_In_SRAM
<LI><a href="#[17f76c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler_In_SRAM
</UL>

<P><STRONG><a name="[17f957c]"></a>htons</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bl_enet.o(i.htons))
<BR><BR>[Called By]<UL><LI><a href="#[17f9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_udp_new
</UL>

<P><STRONG><a name="[17f9540]"></a>my_memcpy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bl_enet.o(i.my_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17f92e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[17f9450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_out
<LI><a href="#[17f94c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_arpin
<LI><a href="#[17fa698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_update
</UL>

<P><STRONG><a name="[17f9504]"></a>my_memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bl_enet.o(i.my_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[17f9270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_udp_new
<LI><a href="#[17f9414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_timer
<LI><a href="#[17f9450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_out
<LI><a href="#[17f948c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_init
</UL>

<P><STRONG><a name="[17f94c8]"></a>uip_arp_arpin</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, bl_enet.o(i.uip_arp_arpin))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uip_arp_arpin &rArr; uip_arp_update &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
<LI><a href="#[17fa698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_update
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17f948c]"></a>uip_arp_init</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, bl_enet.o(i.uip_arp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uip_arp_init &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17f9450]"></a>uip_arp_out</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, bl_enet.o(i.uip_arp_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uip_arp_out &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
<LI><a href="#[17f9540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17f9414]"></a>uip_arp_timer</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, bl_enet.o(i.uip_arp_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uip_arp_timer &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17f939c]"></a>uip_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bl_enet.o(i.uip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uip_init
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17f9360]"></a>uip_ipchksum</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bl_enet.o(i.uip_ipchksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uip_ipchksum &rArr; chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[17fa6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[17f9324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
</UL>

<P><STRONG><a name="[17f9324]"></a>uip_process</STRONG> (Thumb, 470 bytes, Stack size 32 bytes, bl_enet.o(i.uip_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uip_process &rArr; BOOTPThread &rArr; ParseTFTPData &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_ipchksum
<LI><a href="#[17f966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOTPThread
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17f92e8]"></a>uip_send</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bl_enet.o(i.uip_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17fa710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTFTPGet
<LI><a href="#[17fa74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBOOTPRequest
<LI><a href="#[17fa788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseTFTPData
</UL>

<P><STRONG><a name="[17f9270]"></a>uip_udp_new</STRONG> (Thumb, 150 bytes, Stack size 28 bytes, bl_enet.o(i.uip_udp_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uip_udp_new &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
<LI><a href="#[17f957c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[17fa800]"></a>EnetWritePacket</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bl_enet.o(i.EnetWritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EnetWritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>

<P><STRONG><a name="[17fa7c4]"></a>ParseBOOTPReply</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, bl_enet.o(i.ParseBOOTPReply))
<BR><BR>[Called By]<UL><LI><a href="#[17f966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOTPThread
</UL>

<P><STRONG><a name="[17fa788]"></a>ParseTFTPData</STRONG> (Thumb, 272 bytes, Stack size 36 bytes, bl_enet.o(i.ParseTFTPData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParseTFTPData &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f92e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
</UL>
<BR>[Called By]<UL><LI><a href="#[17f966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOTPThread
</UL>

<P><STRONG><a name="[17fa74c]"></a>SendBOOTPRequest</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, bl_enet.o(i.SendBOOTPRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SendBOOTPRequest &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f92e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
</UL>
<BR>[Called By]<UL><LI><a href="#[17f966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOTPThread
</UL>

<P><STRONG><a name="[17fa710]"></a>SendTFTPGet</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, bl_enet.o(i.SendTFTPGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SendTFTPGet &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f92e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
</UL>
<BR>[Called By]<UL><LI><a href="#[17f966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOTPThread
</UL>

<P><STRONG><a name="[17fa6d4]"></a>chksum</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bl_enet.o(i.chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[17f9360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_ipchksum
</UL>

<P><STRONG><a name="[17fa698]"></a>uip_arp_update</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, bl_enet.o(i.uip_arp_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uip_arp_update &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f9540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17f94c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_arpin
</UL>

<P><STRONG><a name="[17f76c8]"></a>Reset_Handler_In_SRAM</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = Reset_Handler_In_SRAM &rArr; UpdateBOOTP &rArr; uip_process &rArr; BOOTPThread &rArr; ParseTFTPData &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f7524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartApplication
<LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
<LI><a href="#[17f9630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureEnet
<LI><a href="#[17fd410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckForceUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17f768c]"></a>UpdateHandler_In_SRAM</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = UpdateHandler_In_SRAM &rArr; UpdateBOOTP &rArr; uip_process &rArr; BOOTPThread &rArr; ParseTFTPData &rArr; uip_send &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17f95b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBOOTP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17f7650]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17f7650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17f7650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17f7614]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[17f7614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[17f7614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17f75d8]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[17f75d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[17f75d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17f759c]"></a>UpdateHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bl_startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[17f74ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessorInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bl_startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
